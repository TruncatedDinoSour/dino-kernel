#!/usr/bin/env bash
# SPDX-License-Identifier: GPL-2.0
#
# This scripts adds local version information from the version
# control systems git, mercurial (hg) and subversion (svn).
#
# If something goes wrong, send a mail the kernel build mailinglist
# (see MAINTAINERS) and CC Nico Schottelius
# <nico-linuxsetlocalversion -at- schottelius.org>.
#
#

set -e

usage() {
    echo "Usage: $0 [--save-scmversion] [srctree]" >&2
    exit 1
}

scm_only=false
srctree=.
if test "$1" = "--save-scmversion"; then
    scm_only=true
    shift
fi
if test $# -gt 0; then
    srctree=$1
    shift
fi
if test $# -gt 0 -o ! -d "$srctree"; then
    usage
fi

scm_version()
{
    cd "$srctree"
    if test -e .scmversion; then
        cat .scmversion
        return
    fi
}

collect_files()
{
    local file res=

    for file; do
        case "$file" in
        *\~*)
            continue
            ;;
        esac
        if test -e "$file"; then
            res="$res$(cat "$file")"
        fi
    done
    echo "$res"
}

if $scm_only; then
    if test ! -e .scmversion; then
        res=$(scm_version)
        echo "$res" >.scmversion
    fi
    exit
fi

if test -e include/config/auto.conf; then
    . include/config/auto.conf
else
    echo "Error: kernelrelease not valid - run 'make prepare' to update it" >&2
    exit 1
fi

# localversion* files in the build and source directory
res="$(collect_files localversion*)"
if test ! "$srctree" -ef .; then
    res="$res$(collect_files "$srctree"/localversion*)"
fi

# CONFIG_LOCALVERSION and LOCALVERSION (if set)
res="${res}${CONFIG_LOCALVERSION}${LOCALVERSION}"

# scm version string if not at a tagged commit
if test "$CONFIG_LOCALVERSION_AUTO" = "y"; then
    # full scm version string
    res="$res$(scm_version)"
elif [ "${LOCALVERSION+set}" != "set" ]; then
    # If the variable LOCALVERSION is not set, append a plus
    # sign if the repository is not in a clean annotated or
    # signed tagged state (as git describe only looks at signed
    # or annotated tags - git tag -a/-s).
    #
    # If the variable LOCALVERSION is set (including being set
    # to an empty string), we don't want to append a plus sign.
    scm=$(scm_version --short)
    res="$res${scm:+}"
fi

echo "$res"
